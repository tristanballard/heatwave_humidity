#!/bin/bash
##############################################################################
# ESG Federation download script
#
# Template version: 1.2
# Generated by esgf-node.ipsl.upmc.fr - 2016/07/07 19:09:42
# Search URL: http://esgf-node.ipsl.upmc.fr/esg-search/wget/?distrib=false&dataset_id=cmip5.output1.IPSL.IPSL-CM5A-MR.historical.day.atmos.day.r1i1p1.v20130506|esgf.extra.cea.fr&dataset_id=cmip5.output1.IPSL.IPSL-CM5A-LR.historical.day.atmos.day.r1i1p1.v20130506|esgf.extra.cea.fr&dataset_id=cmip5.output1.IPSL.IPSL-CM5B-LR.historical.day.atmos.day.r1i1p1.v20130506|esgf.extra.cea.fr
#
###############################################################################
# first be sure it's bash... anything out of bash or sh will break
# and the test will assure we are not using sh instead of bash
if [ $BASH ] && [ `basename $BASH` != bash ]; then
    echo "######## This is a bash script! ##############" 
    echo "Change the execution bit 'chmod u+x $0' or start with 'bash $0' instead of sh."
    echo "Trying to recover automatically..."
    sleep 1
    /bin/bash $0 $@
    exit $?
fi

version=1.3.2
CACHE_FILE=.$(basename $0).status
openId=https://hydra.fsl.noaa.gov/esgf-idp/openid/tristan.ballard
search_url='http://esgf-node.ipsl.upmc.fr/esg-search/wget/?distrib=false&dataset_id=cmip5.output1.IPSL.IPSL-CM5A-MR.historical.day.atmos.day.r1i1p1.v20130506|esgf.extra.cea.fr&dataset_id=cmip5.output1.IPSL.IPSL-CM5A-LR.historical.day.atmos.day.r1i1p1.v20130506|esgf.extra.cea.fr&dataset_id=cmip5.output1.IPSL.IPSL-CM5B-LR.historical.day.atmos.day.r1i1p1.v20130506|esgf.extra.cea.fr'

#These are the embedded files to be downloaded
download_files="$(cat <<EOF--dataset.file.url.chksum_type.chksum
'sfcWind_day_IPSL-CM5B-LR_historical_r1i1p1_18500101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/sfcWind/sfcWind_day_IPSL-CM5B-LR_historical_r1i1p1_18500101-20051231.nc' 'SHA256' '6c5fb7bd6e3aa98de1f3b0c2879a99335b29d81c587f81f0e5e92ad2cd0d10a4'
'tasmax_day_IPSL-CM5B-LR_historical_r1i1p1_18500101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/tasmax/tasmax_day_IPSL-CM5B-LR_historical_r1i1p1_18500101-20051231.nc' 'SHA256' '5977abb745a8aa9f663c8f429e7998a6002ead2371e0ff669a6754b3c4e3bafa'
'tasmin_day_IPSL-CM5B-LR_historical_r1i1p1_18500101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/tasmin/tasmin_day_IPSL-CM5B-LR_historical_r1i1p1_18500101-20051231.nc' 'SHA256' 'e6852e1de675ed0b272bf695659d4c9b70a5137308038e8132a46e829054d59c'
'tas_day_IPSL-CM5B-LR_historical_r1i1p1_18500101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/tas/tas_day_IPSL-CM5B-LR_historical_r1i1p1_18500101-20051231.nc' 'SHA256' '75c4c0c2fee4ebbfa0ea904b2567f857b72607a403cfc9f0a052059553438b7d'
'ua_day_IPSL-CM5B-LR_historical_r1i1p1_19800101-19891231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/ua/ua_day_IPSL-CM5B-LR_historical_r1i1p1_19800101-19891231.nc' 'SHA256' '5dd9b585a343862b529c9036e4c55c15e46eed71a26d76fa93bde35b4e8cec7f'
'ua_day_IPSL-CM5B-LR_historical_r1i1p1_19600101-19691231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/ua/ua_day_IPSL-CM5B-LR_historical_r1i1p1_19600101-19691231.nc' 'SHA256' '84f5a1dff10540bb781b3f61bf990f2d021ccfa45bab343d76a753fa3e0c6b27'
'ua_day_IPSL-CM5B-LR_historical_r1i1p1_19900101-19991231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/ua/ua_day_IPSL-CM5B-LR_historical_r1i1p1_19900101-19991231.nc' 'SHA256' '61d5903f288f4c9760adb7d9947a43dfd5da4bc89255f0ec45be3888a91834d6'
'ua_day_IPSL-CM5B-LR_historical_r1i1p1_19700101-19791231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/ua/ua_day_IPSL-CM5B-LR_historical_r1i1p1_19700101-19791231.nc' 'SHA256' '3140b842815041c8d83853fb7cd8c31db71d5dc3e822845a275a3d9aa1474639'
'ua_day_IPSL-CM5B-LR_historical_r1i1p1_19500101-19591231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/ua/ua_day_IPSL-CM5B-LR_historical_r1i1p1_19500101-19591231.nc' 'SHA256' 'f7d363cb3c6fb6d9c78e55ab6cd62312473c690bc42c2aa3ef8dddff36975510'
'ua_day_IPSL-CM5B-LR_historical_r1i1p1_20000101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/ua/ua_day_IPSL-CM5B-LR_historical_r1i1p1_20000101-20051231.nc' 'SHA256' 'f62ec396bd63bf8180930d3f3abf46f1bf22f9388051577a02044bfbe7ae38f0'
'huss_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/huss/huss_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-20051231.nc' 'SHA256' '89c72f600c83f50cb2ac40c048d0eec01f3f4160033dbed47d575ab3fd319976'
'hus_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-19591231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/hus/hus_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-19591231.nc' 'SHA256' '0de022745ef57a32111726f92e8dcdd87f35fcc37bb264c1d3a86a9e7ad2f7a1'
'hus_day_IPSL-CM5A-LR_historical_r1i1p1_19800101-19891231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/hus/hus_day_IPSL-CM5A-LR_historical_r1i1p1_19800101-19891231.nc' 'SHA256' '6a94851f7b648b5149c72bf80967dc01d73d9f1e709c1dd05a6ef563d8f4d019'
'hus_day_IPSL-CM5A-LR_historical_r1i1p1_19700101-19791231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/hus/hus_day_IPSL-CM5A-LR_historical_r1i1p1_19700101-19791231.nc' 'SHA256' '7ab21b4b1ae2696b039e49b5866785e587795b2f2a2ed13b5256f2def81362f5'
'hus_day_IPSL-CM5A-LR_historical_r1i1p1_19900101-19991231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/hus/hus_day_IPSL-CM5A-LR_historical_r1i1p1_19900101-19991231.nc' 'SHA256' 'bd8290a9205b56bff4ee86e8c021c7c18dcfb96ca5533f354195e0564a36454c'
'hus_day_IPSL-CM5A-LR_historical_r1i1p1_19600101-19691231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/hus/hus_day_IPSL-CM5A-LR_historical_r1i1p1_19600101-19691231.nc' 'SHA256' '256446550fa93e5a6e87e08484c5157cc597c6104e6bf77ba5e523796f16bcf4'
'hus_day_IPSL-CM5A-LR_historical_r1i1p1_20000101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/hus/hus_day_IPSL-CM5A-LR_historical_r1i1p1_20000101-20051231.nc' 'SHA256' '7625849999f200e11c32adbabb91818292e9276aefa11624b54eb21786be4937'
'hur_day_IPSL-CM5A-LR_historical_r1i1p1_19600101-19691231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/hur/hur_day_IPSL-CM5A-LR_historical_r1i1p1_19600101-19691231.nc' 'SHA256' 'ce3f6a3542128b3e95ff8c4162e12e83846e2bd1e5965a1404fdc2347296af6c'
'hur_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-19591231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/hur/hur_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-19591231.nc' 'SHA256' '17da4a071908224bf4e008512387e92962540b303626db3aaf98ed098d1eec17'
'wap_day_IPSL-CM5A-LR_historical_r1i1p1_19900101-19991231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/wap/wap_day_IPSL-CM5A-LR_historical_r1i1p1_19900101-19991231.nc' 'SHA256' '53847a56082ea2c080dc994b57abe1b83c578e70ec5176084b8ede32e88ed2b2'
'wap_day_IPSL-CM5A-LR_historical_r1i1p1_19800101-19891231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/wap/wap_day_IPSL-CM5A-LR_historical_r1i1p1_19800101-19891231.nc' 'SHA256' 'd53ba89a8a3b000548ecabfc60ba291f93480400f295a28c3e8d8f152367c278'
'wap_day_IPSL-CM5A-LR_historical_r1i1p1_19700101-19791231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/wap/wap_day_IPSL-CM5A-LR_historical_r1i1p1_19700101-19791231.nc' 'SHA256' 'd07169131104b7fd01193fe2a059585d970c8ea6f46cea5070fb6886ff4c19f4'
'wap_day_IPSL-CM5A-LR_historical_r1i1p1_19600101-19691231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/wap/wap_day_IPSL-CM5A-LR_historical_r1i1p1_19600101-19691231.nc' 'SHA256' '6e31d50f46e61e5623542bf7431a932666e936ac7001493eaa13704e6c660f21'
'wap_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-19591231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/wap/wap_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-19591231.nc' 'SHA256' '5432949f18e4d2f9d56f68abeb10ccb18492838ac3ff02141802360e8c937d04'
'zg_day_IPSL-CM5A-LR_historical_r1i1p1_19900101-19991231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/zg/zg_day_IPSL-CM5A-LR_historical_r1i1p1_19900101-19991231.nc' 'SHA256' 'e58e162315488ae6e7e7285cb016c4fa7a59d238213bfba15dc202b09281f7e1'
'zg_day_IPSL-CM5A-LR_historical_r1i1p1_19800101-19891231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/zg/zg_day_IPSL-CM5A-LR_historical_r1i1p1_19800101-19891231.nc' 'SHA256' 'f6984a1c1fa1aef0846f5390ec76b622359cf443c6f6d8ffaf941523a284740e'
'zg_day_IPSL-CM5A-LR_historical_r1i1p1_19700101-19791231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/zg/zg_day_IPSL-CM5A-LR_historical_r1i1p1_19700101-19791231.nc' 'SHA256' '5b62127c24de3c9a75c50a2efa0526ffbfeb2f6f853f6e5c2d8f4de239240e93'
'zg_day_IPSL-CM5A-LR_historical_r1i1p1_20000101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/zg/zg_day_IPSL-CM5A-LR_historical_r1i1p1_20000101-20051231.nc' 'SHA256' 'c9ef304a552eb05c7491a0ab06c9b329b0deba42fa58308a1943cc6a8885873a'
'hfss_day_IPSL-CM5B-LR_historical_r1i1p1_18500101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/hfss/hfss_day_IPSL-CM5B-LR_historical_r1i1p1_18500101-20051231.nc' 'SHA256' '8687ed5fa94de0de106bf11b338375f49df776eb4de2c7b7fbe22921c8cee770'
'hfls_day_IPSL-CM5B-LR_historical_r1i1p1_18500101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/hfls/hfls_day_IPSL-CM5B-LR_historical_r1i1p1_18500101-20051231.nc' 'SHA256' '94bbd23c6d418f32995187c1bb01e5e6910d165483d9f4a33a7499a8473daaf8'
'hur_day_IPSL-CM5B-LR_historical_r1i1p1_19500101-19591231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/hur/hur_day_IPSL-CM5B-LR_historical_r1i1p1_19500101-19591231.nc' 'SHA256' '003e5a6dfa63eca42729c3cd93cb751e352db11705e061073994f8ef100fdee9'
'clt_day_IPSL-CM5B-LR_historical_r1i1p1_18500101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/clt/clt_day_IPSL-CM5B-LR_historical_r1i1p1_18500101-20051231.nc' 'SHA256' 'a5d2e803c31f5f178d94d3549d296860ef6d95374c8cc5e48e3131c89dede6f5'
'hur_day_IPSL-CM5B-LR_historical_r1i1p1_19600101-19691231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/hur/hur_day_IPSL-CM5B-LR_historical_r1i1p1_19600101-19691231.nc' 'SHA256' '02c4c10137e8143796afbe9df98dfd18229f061a98cceb5085a426898530a44d'
'hur_day_IPSL-CM5B-LR_historical_r1i1p1_19900101-19991231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/hur/hur_day_IPSL-CM5B-LR_historical_r1i1p1_19900101-19991231.nc' 'SHA256' '4bddc58461a9f84e6180f6362bc5b7643f4e5e522ff420e39770f3caddb96b0c'
'hur_day_IPSL-CM5B-LR_historical_r1i1p1_19800101-19891231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/hur/hur_day_IPSL-CM5B-LR_historical_r1i1p1_19800101-19891231.nc' 'SHA256' '36190c8f2385e0db51c9f54740aa3b5a97f7404eeb9f84f00c80f9f53dfe2b26'
'hur_day_IPSL-CM5B-LR_historical_r1i1p1_19700101-19791231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/hur/hur_day_IPSL-CM5B-LR_historical_r1i1p1_19700101-19791231.nc' 'SHA256' '26768d35c4171ccb3bc01fb055105662b06ea5488c3109a3fc2436063ede7c6b'
'hur_day_IPSL-CM5B-LR_historical_r1i1p1_20000101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/hur/hur_day_IPSL-CM5B-LR_historical_r1i1p1_20000101-20051231.nc' 'SHA256' '83cafd7f4119f4135af898933d2b0f924e67c3bebabd97fd60c099ee221ecfb8'
'sfcWindmax_day_IPSL-CM5B-LR_historical_r1i1p1_18500101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/sfcWindmax/sfcWindmax_day_IPSL-CM5B-LR_historical_r1i1p1_18500101-20051231.nc' 'SHA256' 'deb25ce44b5fc11f9de9d0e5fd640c7cd3df0fade9bab9f40cc3b41e73573bf7'
'rsds_day_IPSL-CM5B-LR_historical_r1i1p1_18500101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/rsds/rsds_day_IPSL-CM5B-LR_historical_r1i1p1_18500101-20051231.nc' 'SHA256' 'be15c8b9e561fb47890b62099e39cdec91a58bea30ed9b15ed122513beb44636'
'rsus_day_IPSL-CM5B-LR_historical_r1i1p1_18500101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/rsus/rsus_day_IPSL-CM5B-LR_historical_r1i1p1_18500101-20051231.nc' 'SHA256' '258985d3610e5199b034e6dcf4fbe5e95071a4f41d2822a8b34079f9661bda8c'
'ta_day_IPSL-CM5B-LR_historical_r1i1p1_19900101-19991231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/ta/ta_day_IPSL-CM5B-LR_historical_r1i1p1_19900101-19991231.nc' 'SHA256' 'f7b2bacdb04f4a61dc32b2aa0361a79f1ccf04402eb3b00059bb9218bf676180'
'ta_day_IPSL-CM5B-LR_historical_r1i1p1_19800101-19891231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/ta/ta_day_IPSL-CM5B-LR_historical_r1i1p1_19800101-19891231.nc' 'SHA256' '3ce1cd094c556b92827556f1503e1f651ef26864a2e32bc706597bf7085d5cbd'
'ta_day_IPSL-CM5B-LR_historical_r1i1p1_19500101-19591231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/ta/ta_day_IPSL-CM5B-LR_historical_r1i1p1_19500101-19591231.nc' 'SHA256' '8c17d5ec0854250fc052ff8b9abd1ef6bcaf4158019a3a6895f7780c5b157f94'
'ta_day_IPSL-CM5B-LR_historical_r1i1p1_19700101-19791231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/ta/ta_day_IPSL-CM5B-LR_historical_r1i1p1_19700101-19791231.nc' 'SHA256' '56dfe1f2dba850d396db3dbda0bcca9d2f780878f02af31f1b428c6aef48066a'
'ta_day_IPSL-CM5B-LR_historical_r1i1p1_19600101-19691231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/ta/ta_day_IPSL-CM5B-LR_historical_r1i1p1_19600101-19691231.nc' 'SHA256' 'b898c5265152dfe2c4741c1f3c15f48c2510b55a95f904a37384261a21497605'
'ta_day_IPSL-CM5B-LR_historical_r1i1p1_20000101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/ta/ta_day_IPSL-CM5B-LR_historical_r1i1p1_20000101-20051231.nc' 'SHA256' '7b7ebea484416a28568d18f35dccdaa64531762dac5ce385a3cbf4b4455285f6'
'zg_day_IPSL-CM5B-LR_historical_r1i1p1_19600101-19691231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/zg/zg_day_IPSL-CM5B-LR_historical_r1i1p1_19600101-19691231.nc' 'SHA256' '340f21f637f00cf947c57c302290b8f072ed0bbb6311c76baaf8f3c74f19bc36'
'zg_day_IPSL-CM5B-LR_historical_r1i1p1_19500101-19591231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/zg/zg_day_IPSL-CM5B-LR_historical_r1i1p1_19500101-19591231.nc' 'SHA256' 'f9e1e13ee7196e12e5374575009f4b3e5ad4116de1294fe3eb4f37e80f6e4cb8'
'hfss_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/hfss/hfss_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-20051231.nc' 'SHA256' '2f6cf483c0dc133daebd0e4bff9498e114d6f26936681f8363ff49cfd514c8be'
'hfls_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/hfls/hfls_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-20051231.nc' 'SHA256' '724ba15fd326bc5dc8f4e2c8a604d12557422a52a2223403c85fa41f700788eb'
'clt_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/clt/clt_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-20051231.nc' 'SHA256' '661e715457ab083fe1d22b0db73dee5c326563a0437e775e8adbc178243a1f8c'
'hur_day_IPSL-CM5A-LR_historical_r1i1p1_19700101-19791231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/hur/hur_day_IPSL-CM5A-LR_historical_r1i1p1_19700101-19791231.nc' 'SHA256' '3fd13b7a79e785a43cf957bc3a4e8b744721f2d3c7cf9e669b884000804af69d'
'hur_day_IPSL-CM5A-LR_historical_r1i1p1_19900101-19991231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/hur/hur_day_IPSL-CM5A-LR_historical_r1i1p1_19900101-19991231.nc' 'SHA256' '6809b658c5c5ae96a838a94960831dd106c241eb3fde7e2bdc710cfe5f248cc5'
'hur_day_IPSL-CM5A-LR_historical_r1i1p1_19800101-19891231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/hur/hur_day_IPSL-CM5A-LR_historical_r1i1p1_19800101-19891231.nc' 'SHA256' '1776676893f74799d03f0eb12a4799fa02711f317d0e9104b58774dd7587f468'
'hur_day_IPSL-CM5A-LR_historical_r1i1p1_20000101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/hur/hur_day_IPSL-CM5A-LR_historical_r1i1p1_20000101-20051231.nc' 'SHA256' '70c2ee656b59fd2e6a78f3d7b8c74cd039212d1ee68c9216c2468d83d206fcf1'
'tasmax_day_IPSL-CM5A-LR_historical_r1i1p1_18500101-19491231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/tasmax/tasmax_day_IPSL-CM5A-LR_historical_r1i1p1_18500101-19491231.nc' 'SHA256' 'd54405fb1cdabe909c90317d63c571f389b817ec591a62f3871a83ad14d099c2'
'tasmin_day_IPSL-CM5A-LR_historical_r1i1p1_18500101-19491231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/tasmin/tasmin_day_IPSL-CM5A-LR_historical_r1i1p1_18500101-19491231.nc' 'SHA256' '09acf2f738f9c4dc29f74d8d5d001721379d5b251407ec9ec4a78f49ccc7fdbb'
'tasmin_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/tasmin/tasmin_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-20051231.nc' 'SHA256' '97cf0ad0d07d370a758e09f492573a30f4bbc84a071f4b8c22d4a162b033feaf'
'ua_day_IPSL-CM5A-LR_historical_r1i1p1_19700101-19791231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/ua/ua_day_IPSL-CM5A-LR_historical_r1i1p1_19700101-19791231.nc' 'SHA256' '0b2c573ffcd002033940895fca2aeb8af4c88780f1878d4faa004e8c2f29eb0c'
'ua_day_IPSL-CM5A-LR_historical_r1i1p1_20000101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/ua/ua_day_IPSL-CM5A-LR_historical_r1i1p1_20000101-20051231.nc' 'SHA256' '62c907a7f48d4b1a6eb29082e0ae5d53432f0d88fc0a6b3ef83f418a718ccae1'
'ua_day_IPSL-CM5A-LR_historical_r1i1p1_19900101-19991231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/ua/ua_day_IPSL-CM5A-LR_historical_r1i1p1_19900101-19991231.nc' 'SHA256' '0beecffeeb9b949cc4801c277b4b29c5996df7fd7c3d8e9b28c1bbc47bc43e3c'
'ua_day_IPSL-CM5A-LR_historical_r1i1p1_19800101-19891231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/ua/ua_day_IPSL-CM5A-LR_historical_r1i1p1_19800101-19891231.nc' 'SHA256' '86edd483f27109df333fcef37baf9d94708678ce41a8fae525c32c5b2a917a09'
'ua_day_IPSL-CM5A-LR_historical_r1i1p1_19600101-19691231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/ua/ua_day_IPSL-CM5A-LR_historical_r1i1p1_19600101-19691231.nc' 'SHA256' '44290257c08e3649076388ea6150a293a3a8fa9430af7540d177e1ea8e336188'
'ua_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-19591231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/ua/ua_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-19591231.nc' 'SHA256' '8054df9505b3eecbef17badbe23846a1e0216e54a3c732cd47f4386e1235f725'
'rlds_day_IPSL-CM5B-LR_historical_r1i1p1_18500101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/rlds/rlds_day_IPSL-CM5B-LR_historical_r1i1p1_18500101-20051231.nc' 'SHA256' 'f1bda48c2594c7b109e7421e4d08bab9baf256e7051b47aef400b2a157ebcddc'
'rlus_day_IPSL-CM5B-LR_historical_r1i1p1_18500101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/rlus/rlus_day_IPSL-CM5B-LR_historical_r1i1p1_18500101-20051231.nc' 'SHA256' '1f878c5717d54667c05b55fbcf4c2456ff3720e3ae2c213f5a2e2d3e35796509'
'rhsmax_day_IPSL-CM5B-LR_historical_r1i1p1_18500101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/rhsmax/rhsmax_day_IPSL-CM5B-LR_historical_r1i1p1_18500101-20051231.nc' 'SHA256' '97a5a64568c567b183e763dffb880982eb5e20a36c1624df3b0f00a6f3fae257'
'rhsmin_day_IPSL-CM5B-LR_historical_r1i1p1_18500101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/rhsmin/rhsmin_day_IPSL-CM5B-LR_historical_r1i1p1_18500101-20051231.nc' 'SHA256' '3c89ec538a16709340b3a097ba374d4459b3b32771e794d0b01970dd4f16806b'
'rlut_day_IPSL-CM5B-LR_historical_r1i1p1_18500101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/rlut/rlut_day_IPSL-CM5B-LR_historical_r1i1p1_18500101-20051231.nc' 'SHA256' '5450833495a1634b0bdcf674362f5f8f9d66a40ad30d11e678da94152a19a549'
'prsn_day_IPSL-CM5B-LR_historical_r1i1p1_19500101-19991231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/prsn/prsn_day_IPSL-CM5B-LR_historical_r1i1p1_19500101-19991231.nc' 'SHA256' 'd1fa9e032be28f5ebb1fd37b2ed050b31251d048d99696e363d883419e9df410'
'prsn_day_IPSL-CM5B-LR_historical_r1i1p1_20000101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/prsn/prsn_day_IPSL-CM5B-LR_historical_r1i1p1_20000101-20051231.nc' 'SHA256' '84c752126b374740bb26e5e9b570b999e1d59667d7343cbbd6c3b4f6a1a466f5'
'rhs_day_IPSL-CM5B-LR_historical_r1i1p1_18500101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/rhs/rhs_day_IPSL-CM5B-LR_historical_r1i1p1_18500101-20051231.nc' 'SHA256' '6795fc61d52d419556f92a461683fd45d273cdc40de27c2dd1a354d688432dfb'
'psl_day_IPSL-CM5B-LR_historical_r1i1p1_18500101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/psl/psl_day_IPSL-CM5B-LR_historical_r1i1p1_18500101-20051231.nc' 'SHA256' '7b7dcf44a55ff46a3f08f3a35b068067c53f9482c921259feb9866b5f3295af5'
'wap_day_IPSL-CM5B-LR_historical_r1i1p1_20000101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/wap/wap_day_IPSL-CM5B-LR_historical_r1i1p1_20000101-20051231.nc' 'SHA256' '692fbc6c1f31e92cc6d5ad2c92efde416bc254b518dfefcb6291090e920fb021'
'vas_day_IPSL-CM5B-LR_historical_r1i1p1_18500101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/vas/vas_day_IPSL-CM5B-LR_historical_r1i1p1_18500101-20051231.nc' 'SHA256' 'db26385b7b275190014f28b2278c488a70261ddfaca3b5b2d13a4ed4746caedb'
'uas_day_IPSL-CM5B-LR_historical_r1i1p1_18500101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/uas/uas_day_IPSL-CM5B-LR_historical_r1i1p1_18500101-20051231.nc' 'SHA256' '160467ba01eba837a0c602830d43b1b1bc5f576d33b3da16951acb881bd10925'
'va_day_IPSL-CM5B-LR_historical_r1i1p1_20000101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/va/va_day_IPSL-CM5B-LR_historical_r1i1p1_20000101-20051231.nc' 'SHA256' '865f32cc54a48bcd0750b5e25810ee17f40beaf028dad7d8c1cba092a5c8617d'
'va_day_IPSL-CM5B-LR_historical_r1i1p1_19900101-19991231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/va/va_day_IPSL-CM5B-LR_historical_r1i1p1_19900101-19991231.nc' 'SHA256' 'bb53bc6e0221722e6ebfb37fcf689ba515cd7672004ced358b12ae1dae716372'
'va_day_IPSL-CM5B-LR_historical_r1i1p1_19800101-19891231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/va/va_day_IPSL-CM5B-LR_historical_r1i1p1_19800101-19891231.nc' 'SHA256' 'd9e6dd325f197e0c425015b07eb1ab42f0b912d300f084765e539e258329a070'
'va_day_IPSL-CM5B-LR_historical_r1i1p1_19700101-19791231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/va/va_day_IPSL-CM5B-LR_historical_r1i1p1_19700101-19791231.nc' 'SHA256' 'd7465718bdf4e8a053ecfae53e02234094d149bfb405610f681f2c6c934cb201'
'va_day_IPSL-CM5B-LR_historical_r1i1p1_19600101-19691231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/va/va_day_IPSL-CM5B-LR_historical_r1i1p1_19600101-19691231.nc' 'SHA256' 'ecd8335d5ce2cd327b0dea82bd5273557f65c70fe9222689d81271097753b344'
'va_day_IPSL-CM5B-LR_historical_r1i1p1_19500101-19591231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/va/va_day_IPSL-CM5B-LR_historical_r1i1p1_19500101-19591231.nc' 'SHA256' 'e93f64d14485cbdfa14c14fea46187d5578ddedf32be8a3d22aa2728e708db2d'
'tasmax_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/tasmax/tasmax_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-20051231.nc' 'SHA256' '289716e7b88608e19f2b9a69e17e52322e2f23e76b5086122f420f8f00809980'
'tas_day_IPSL-CM5A-LR_historical_r1i1p1_18500101-19491231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/tas/tas_day_IPSL-CM5A-LR_historical_r1i1p1_18500101-19491231.nc' 'SHA256' '2b3482613e8b73a21c838a038f1f628c9633db78877865cb257e7bf339f38659'
'tas_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/tas/tas_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-20051231.nc' 'SHA256' '2973894a5d1322b44c77655a31c84bdf66a6f79733d0718595ca1de367a17ab2'
'ta_day_IPSL-CM5A-LR_historical_r1i1p1_19600101-19691231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/ta/ta_day_IPSL-CM5A-LR_historical_r1i1p1_19600101-19691231.nc' 'SHA256' '31afbae458b4584e192427a170e94cccf84b1b64585dbecb74794e54071c78c6'
'ta_day_IPSL-CM5A-LR_historical_r1i1p1_19900101-19991231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/ta/ta_day_IPSL-CM5A-LR_historical_r1i1p1_19900101-19991231.nc' 'SHA256' 'b87e50581f4c707c92a3bd8768f6624cd634d9b6e3554af3f9c0b63597f6c748'
'ta_day_IPSL-CM5A-LR_historical_r1i1p1_19800101-19891231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/ta/ta_day_IPSL-CM5A-LR_historical_r1i1p1_19800101-19891231.nc' 'SHA256' '93789e3529166e741d0499d4053533e26dbf4a690d440327692d66d699e19256'
'ta_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-19591231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/ta/ta_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-19591231.nc' 'SHA256' '495626596a7f4dbf061d62a3fa4e385ad2706796de37dd9b0914c06bc39bdb89'
'ta_day_IPSL-CM5A-LR_historical_r1i1p1_20000101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/ta/ta_day_IPSL-CM5A-LR_historical_r1i1p1_20000101-20051231.nc' 'SHA256' '641d8965800811f3e792b32e0af2861e0f4e25461b08000aea41bb41eb1b63d4'
'ta_day_IPSL-CM5A-LR_historical_r1i1p1_19700101-19791231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/ta/ta_day_IPSL-CM5A-LR_historical_r1i1p1_19700101-19791231.nc' 'SHA256' 'de50955d2ba33adfd4b4a5d6bd3cf849f7267d2bd6564c3327d076454821f5f9'
'rhsmax_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/rhsmax/rhsmax_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-20051231.nc' 'SHA256' 'ad5f6550adf8b872855b2cf2b150bcbe8a8827c376e4d46c491d7545e924258d'
'prc_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/prc/prc_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-20051231.nc' 'SHA256' 'f6d4f4ccde064cdf9c271e28b0fc9f64a28aa04127b9fcc3da104a917156dabf'
'huss_day_IPSL-CM5A-LR_historical_r1i1p1_18500101-19491231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/huss/huss_day_IPSL-CM5A-LR_historical_r1i1p1_18500101-19491231.nc' 'SHA256' 'be89171493cd3f2366ade24a3c46928aae5101d625de3759dba521329a41ca68'
'prsn_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/prsn/prsn_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-20051231.nc' 'SHA256' '0ad1eb9d5a53b43fc4b733067e5d4373c7a94426c83e02f53d7750e7fa9dae50'
'rhs_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/rhs/rhs_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-20051231.nc' 'SHA256' '0e48fee20bfbcc146f13b4e4fcd720607346f98865d9063e9cd2a2822b204d4b'
'psl_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/psl/psl_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-20051231.nc' 'SHA256' 'b553259a4c8f293b821f13e1227e8c461a624d6b7c3659d5a599dc6a740a5f0d'
'psl_day_IPSL-CM5A-LR_historical_r1i1p1_18500101-19491231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/psl/psl_day_IPSL-CM5A-LR_historical_r1i1p1_18500101-19491231.nc' 'SHA256' 'ae58cc36106fa403fb275c2aec5d16307b13450c4083d3427494d3dda0f090d5'
'pr_day_IPSL-CM5A-LR_historical_r1i1p1_18500101-19491231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/pr/pr_day_IPSL-CM5A-LR_historical_r1i1p1_18500101-19491231.nc' 'SHA256' '6ba37e6e935f9f91d9126ea818c1e5c02674d568acb8d33112defd082dcf7673'
'pr_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/pr/pr_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-20051231.nc' 'SHA256' '36213a93bd6ab97dcba0360393968a9ff87cd2f29cddc9feb0d328bf47abe422'
'zg_day_IPSL-CM5A-LR_historical_r1i1p1_19600101-19691231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/zg/zg_day_IPSL-CM5A-LR_historical_r1i1p1_19600101-19691231.nc' 'SHA256' '8fcb771c34037b707ad5813a46d31cec702c4ed8f8a0861cbfbb1b2f58c0ca5f'
'zg_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-19591231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/zg/zg_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-19591231.nc' 'SHA256' '188795b298ff02fe42e5147f7b1187926d55b5906cbf6d53ddcaeb1581c2eed5'
'prc_day_IPSL-CM5B-LR_historical_r1i1p1_18500101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/prc/prc_day_IPSL-CM5B-LR_historical_r1i1p1_18500101-20051231.nc' 'SHA256' '2b63d203ca73bf2a56047835599b748efe522a46f197618f44edf8121de7dea3'
'huss_day_IPSL-CM5B-LR_historical_r1i1p1_18500101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/huss/huss_day_IPSL-CM5B-LR_historical_r1i1p1_18500101-20051231.nc' 'SHA256' '16913bbf072b2a4a82859d605013f4a96d56bd31d7834c9d6419ab64b5658fde'
'pr_day_IPSL-CM5B-LR_historical_r1i1p1_18500101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/pr/pr_day_IPSL-CM5B-LR_historical_r1i1p1_18500101-20051231.nc' 'SHA256' 'cd9982b267e750b1bb2a7ce8e157b04938f7cd7a35d34e162c53120f9ed66baa'
'hus_day_IPSL-CM5B-LR_historical_r1i1p1_20000101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/hus/hus_day_IPSL-CM5B-LR_historical_r1i1p1_20000101-20051231.nc' 'SHA256' '247c13fdcaed571a14f62f17c24232be24294f98a431a6fabafbd63136facbf6'
'hus_day_IPSL-CM5B-LR_historical_r1i1p1_19900101-19991231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/hus/hus_day_IPSL-CM5B-LR_historical_r1i1p1_19900101-19991231.nc' 'SHA256' '68ca36453363fffbfd4603a0bce00a2bcb465fdb208260905ee296a83981f37f'
'hus_day_IPSL-CM5B-LR_historical_r1i1p1_19800101-19891231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/hus/hus_day_IPSL-CM5B-LR_historical_r1i1p1_19800101-19891231.nc' 'SHA256' 'fb1185f8a84ea8e3450888855034cfcfaade87a87a3b347daf6456037d734daa'
'hus_day_IPSL-CM5B-LR_historical_r1i1p1_19700101-19791231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/hus/hus_day_IPSL-CM5B-LR_historical_r1i1p1_19700101-19791231.nc' 'SHA256' 'e7dac5394350a74bc28d856db07a338a5227aef0635fbb7b2b69a422cb82f7bf'
'hus_day_IPSL-CM5B-LR_historical_r1i1p1_19600101-19691231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/hus/hus_day_IPSL-CM5B-LR_historical_r1i1p1_19600101-19691231.nc' 'SHA256' 'e813d964cc3940fc110c50e8cd421edb26ed639b07583fae7cb01dae61c25787'
'hus_day_IPSL-CM5B-LR_historical_r1i1p1_19500101-19591231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/hus/hus_day_IPSL-CM5B-LR_historical_r1i1p1_19500101-19591231.nc' 'SHA256' '93d74e18e229a6c6fea983b88ab81b15b6323d1822a91d8a56179e02cf738fb3'
'wap_day_IPSL-CM5B-LR_historical_r1i1p1_19800101-19891231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/wap/wap_day_IPSL-CM5B-LR_historical_r1i1p1_19800101-19891231.nc' 'SHA256' 'e05d90bbfb48b46c47928a8d3b9fbf8b4ad7741370988ea3d0cb160d08826b24'
'wap_day_IPSL-CM5B-LR_historical_r1i1p1_19900101-19991231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/wap/wap_day_IPSL-CM5B-LR_historical_r1i1p1_19900101-19991231.nc' 'SHA256' 'a6d13fab36adcfd31ade62dde1772cbe63c622e2b53f71e3a644cffbd0d69722'
'wap_day_IPSL-CM5B-LR_historical_r1i1p1_19700101-19791231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/wap/wap_day_IPSL-CM5B-LR_historical_r1i1p1_19700101-19791231.nc' 'SHA256' 'a47d930c86a26f40d1e697b652aed732ff95544ad1964cbec4e380e0d9efff11'
'wap_day_IPSL-CM5B-LR_historical_r1i1p1_19600101-19691231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/wap/wap_day_IPSL-CM5B-LR_historical_r1i1p1_19600101-19691231.nc' 'SHA256' 'e0f24039c3316625fe62e7bbf824f177b56cc1cf93c63e0c8eb8629d0fcee953'
'wap_day_IPSL-CM5B-LR_historical_r1i1p1_19500101-19591231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/wap/wap_day_IPSL-CM5B-LR_historical_r1i1p1_19500101-19591231.nc' 'SHA256' '2c89f5486ee1ecffec4265e5fa778e6133ed229f11e3df23c98008ae6f6c09d3'
'zg_day_IPSL-CM5B-LR_historical_r1i1p1_20000101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/zg/zg_day_IPSL-CM5B-LR_historical_r1i1p1_20000101-20051231.nc' 'SHA256' '1feed2a474c10006573d70bb1e4e721c79caee6f0b160ac9b8702ddb9cd825ac'
'zg_day_IPSL-CM5B-LR_historical_r1i1p1_19700101-19791231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/zg/zg_day_IPSL-CM5B-LR_historical_r1i1p1_19700101-19791231.nc' 'SHA256' '7b5601bf46439603a15109d4d5477becf07e87c4dea152f167c3d06e747a8d3d'
'zg_day_IPSL-CM5B-LR_historical_r1i1p1_19900101-19991231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/zg/zg_day_IPSL-CM5B-LR_historical_r1i1p1_19900101-19991231.nc' 'SHA256' '289fccd682bdf885e382201c24ff9a9f9daf1bb19b2cee0aa799b0f3b072e6ac'
'zg_day_IPSL-CM5B-LR_historical_r1i1p1_19800101-19891231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5B-LR/historical/day/atmos/day/r1i1p1/v20130506/zg/zg_day_IPSL-CM5B-LR_historical_r1i1p1_19800101-19891231.nc' 'SHA256' '5cc9364759058b6906a0cd25803135e4252f889104104ceecb11651c2eee0112'
'sfcWindmax_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/sfcWindmax/sfcWindmax_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-20051231.nc' 'SHA256' 'e53be5f6e89186cedb34da712c5894688733dabcf1f6e2025cc525b71e12eb10'
'rsds_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/rsds/rsds_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-20051231.nc' 'SHA256' 'd6e32a3860c09b652b324922eabbf5177b0df0ac14561290d45bf33c340b8088'
'rlds_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/rlds/rlds_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-20051231.nc' 'SHA256' '6834cfd604799d7a29b4b0a57682ceb61a1b87c5fb0b8df8c556a47fe48748ed'
'rsus_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/rsus/rsus_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-20051231.nc' 'SHA256' '554c36d6de6ca8619b41c01511079f02efc0264c2185474737bde45fc209094b'
'rlus_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/rlus/rlus_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-20051231.nc' 'SHA256' 'f1a1147e726610357afed93e30ad5ae89a648ea48ffe5c236f6b7c51dc8fd53e'
'sfcWind_day_IPSL-CM5A-LR_historical_r1i1p1_18500101-19491231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/sfcWind/sfcWind_day_IPSL-CM5A-LR_historical_r1i1p1_18500101-19491231.nc' 'SHA256' 'c921369ed7c902ce88515aacea35ae053794f782ac083466608a64e17e78a322'
'sfcWind_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/sfcWind/sfcWind_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-20051231.nc' 'SHA256' '8778543b2d0d4ad2395d95310c242b0452923e07bdaf02b3a8dba5f54a9aa161'
'rhsmin_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/rhsmin/rhsmin_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-20051231.nc' 'SHA256' '22a9ba31f5eb6e49735adfc24bddfeb291f6f8c3c6b7cd21a3a0012f69ae3bf2'
'rlut_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/rlut/rlut_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-20051231.nc' 'SHA256' 'eb28f98d02862ca38c4a24058ececaf46f4e8498b7163a89a02e29b67f0e416c'
'wap_day_IPSL-CM5A-LR_historical_r1i1p1_20000101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/wap/wap_day_IPSL-CM5A-LR_historical_r1i1p1_20000101-20051231.nc' 'SHA256' 'c2f5d9286ce5792a5c3a7e2b0a129090ae478367f1c86ecc56f1175158c9945d'
'vas_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/vas/vas_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-20051231.nc' 'SHA256' 'd8ffb0458a51b062efa6a5afcf451aea795054461d4624d36c7b7ef429765fae'
'uas_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/uas/uas_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-20051231.nc' 'SHA256' '7efc74b6b63173482405b6974ed221d1c52f76ddc54148fc3bd2e0be875d0522'
'va_day_IPSL-CM5A-LR_historical_r1i1p1_19900101-19991231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/va/va_day_IPSL-CM5A-LR_historical_r1i1p1_19900101-19991231.nc' 'SHA256' '821b14863f976f4f799512c1da1406bd0579ac42f438ca945bacf7e3dfe89040'
'va_day_IPSL-CM5A-LR_historical_r1i1p1_19800101-19891231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/va/va_day_IPSL-CM5A-LR_historical_r1i1p1_19800101-19891231.nc' 'SHA256' '1bd02c6f5316581f013e064c21aaa133daf81b797aad205c71510f6a1983219d'
'va_day_IPSL-CM5A-LR_historical_r1i1p1_19700101-19791231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/va/va_day_IPSL-CM5A-LR_historical_r1i1p1_19700101-19791231.nc' 'SHA256' '200c13562002fe7d01999261d7a026811cd23f4c00e1e079af9eb9f717aaa883'
'va_day_IPSL-CM5A-LR_historical_r1i1p1_19600101-19691231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/va/va_day_IPSL-CM5A-LR_historical_r1i1p1_19600101-19691231.nc' 'SHA256' '935d90c0a9a4ce2326cc1d9310fe3ad2fe3d4edef94f8492fb1e6eac32927938'
'va_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-19591231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/va/va_day_IPSL-CM5A-LR_historical_r1i1p1_19500101-19591231.nc' 'SHA256' 'd2f2528d71c8a2554707d895333ed1691b4df56c5326f9c33af18f8b0925717d'
'va_day_IPSL-CM5A-LR_historical_r1i1p1_20000101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-LR/historical/day/atmos/day/r1i1p1/v20130506/va/va_day_IPSL-CM5A-LR_historical_r1i1p1_20000101-20051231.nc' 'SHA256' '832572da31887a0dfe89aa7a56d375fe24f69856acbb526fa127972323d30a79'
'hfss_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19991231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/hfss/hfss_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19991231.nc' 'SHA256' '1085d15dc5c93829da5ddc3c855068c6c5cd30517e7218f66d4dc5659b355d1a'
'hfss_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/hfss/hfss_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'SHA256' '78b575fd8367bb1911a634e8dcba65bbe06bd478fd1037877680b9a067b71e27'
'hfls_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19991231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/hfls/hfls_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19991231.nc' 'SHA256' 'cad6e4cf8cd065f281c2be23e43483338d23f3789d738f1527dc98987b82f15a'
'hfls_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/hfls/hfls_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'SHA256' '69d58cb0cd1498fc1a22dfd52f571f8a4dcc78581226584936f8db2519d22133'
'clt_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/clt/clt_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'SHA256' '4a0382b491230b53d047639c19ed52fa84d14b6c14c0d546164de168e1d606df'
'clt_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19991231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/clt/clt_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19991231.nc' 'SHA256' 'd1984077833f9601a02ea0470dd9a21d9f35eecf937816286206af12bc5821f4'
'hur_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/hur/hur_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'SHA256' '2c750421407f7e2671f702e08db64a0e3c8cb53e1a265ee5742785b5587988c7'
'hur_day_IPSL-CM5A-MR_historical_r1i1p1_19900101-19991231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/hur/hur_day_IPSL-CM5A-MR_historical_r1i1p1_19900101-19991231.nc' 'SHA256' '26d18acc31fde4583d4284bf468bb36d2e338b0da54589d5a82ee7a69e2f7d93'
'hur_day_IPSL-CM5A-MR_historical_r1i1p1_19800101-19891231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/hur/hur_day_IPSL-CM5A-MR_historical_r1i1p1_19800101-19891231.nc' 'SHA256' '991e197301f5a22ff761bff06b39d197714619fb50a0cef2f1493c5c336850a7'
'sfcWindmax_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19991231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/sfcWindmax/sfcWindmax_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19991231.nc' 'SHA256' '2eb7155b987c7fb356af0fd1c4f8a14738b2fc0f8dab6d5e83a1dff91b54b879'
'sfcWindmax_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/sfcWindmax/sfcWindmax_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'SHA256' '18ba55f0cfcbd8cd2124287e479b7c4c69da927c28109fc974fb7db4eb9ffe83'
'tas_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/tas/tas_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'SHA256' 'b59d9a656eca357a962021287f07d2f4af85bc528d9c43a61157e9f60e9033cf'
'ta_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19591231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/ta/ta_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19591231.nc' 'SHA256' '0187d02d2b7a1241cd1df2c40a3a14cfbbfdfe56160bd30dcb5aa884d9a80b47'
'ta_day_IPSL-CM5A-MR_historical_r1i1p1_19700101-19791231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/ta/ta_day_IPSL-CM5A-MR_historical_r1i1p1_19700101-19791231.nc' 'SHA256' '183144771b402ef9190a412ef91a1e92638af689e7552c4df1e2bb4dee3dd6cb'
'ta_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/ta/ta_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'SHA256' 'fa60bd83e7ae3078995bc5ac6f614709a0e7c00269c07b4df0311ed4aa5f17de'
'ta_day_IPSL-CM5A-MR_historical_r1i1p1_19900101-19991231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/ta/ta_day_IPSL-CM5A-MR_historical_r1i1p1_19900101-19991231.nc' 'SHA256' 'ca50b842d3c1afa4cdc2d8128000bb46752e83c844a68806d16e40abfff3b2b0'
'ta_day_IPSL-CM5A-MR_historical_r1i1p1_19800101-19891231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/ta/ta_day_IPSL-CM5A-MR_historical_r1i1p1_19800101-19891231.nc' 'SHA256' '557749f0a13b7f98a3d35b222e3418b828361641363350f64a63d39eb4def3c8'
'ta_day_IPSL-CM5A-MR_historical_r1i1p1_19600101-19691231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/ta/ta_day_IPSL-CM5A-MR_historical_r1i1p1_19600101-19691231.nc' 'SHA256' '2775132a2fdef3cd88a32aeb4f45d81b84fa534fe902a1f6ddddfd680ae4dd59'
'vas_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/vas/vas_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'SHA256' '1d728310c49225ec2bd473c8710c0e2c4c8f5245dc3b74b09339182250553180'
'vas_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19991231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/vas/vas_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19991231.nc' 'SHA256' '9dc36afcd6a908b40cb5070d32b3d7a38fa4568eeda257209ed04768a16ae1a8'
'uas_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19991231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/uas/uas_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19991231.nc' 'SHA256' '3e677bda6c753592995e5f624a142f4451eb17c51f5edcf92755ac63eb395012'
'va_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/va/va_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'SHA256' '33f8b1cfaa31904ce9f29ec06be7c2c8498dec796eef74b8348c69914ac6d03f'
'va_day_IPSL-CM5A-MR_historical_r1i1p1_19900101-19991231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/va/va_day_IPSL-CM5A-MR_historical_r1i1p1_19900101-19991231.nc' 'SHA256' '566977cd62f9c1df34d54bab4f2c769ebe76d8bd639cc0888de50ccdbab0764b'
'va_day_IPSL-CM5A-MR_historical_r1i1p1_19800101-19891231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/va/va_day_IPSL-CM5A-MR_historical_r1i1p1_19800101-19891231.nc' 'SHA256' '33df5f57336ad8b644c8b3650ec3fc131a6d7a547a28a7dd8a972cdbae85d177'
'va_day_IPSL-CM5A-MR_historical_r1i1p1_19700101-19791231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/va/va_day_IPSL-CM5A-MR_historical_r1i1p1_19700101-19791231.nc' 'SHA256' 'b8fa7d800ace26da77f95a3372d13ce276d6b30dd8159896d6693036f1f9432c'
'va_day_IPSL-CM5A-MR_historical_r1i1p1_19600101-19691231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/va/va_day_IPSL-CM5A-MR_historical_r1i1p1_19600101-19691231.nc' 'SHA256' 'f0841b618cf3a38758be6558be492c08c90107317cf9242f33b721fa44fbab5c'
'va_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19591231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/va/va_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19591231.nc' 'SHA256' 'f45fcaae93614c11b3369a8e5772aaf53f7e14215b5ad5c8257f7d811240b6fd'
'hur_day_IPSL-CM5A-MR_historical_r1i1p1_19600101-19691231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/hur/hur_day_IPSL-CM5A-MR_historical_r1i1p1_19600101-19691231.nc' 'SHA256' 'd547df32d7604235b999b23535aba16f8fb526d27770d4b40a73b13455202fc6'
'hur_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19591231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/hur/hur_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19591231.nc' 'SHA256' '0d5229707567576985756e40b39037db818d601668a60abbaad2f391dd1617ee'
'hus_day_IPSL-CM5A-MR_historical_r1i1p1_19900101-19991231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/hus/hus_day_IPSL-CM5A-MR_historical_r1i1p1_19900101-19991231.nc' 'SHA256' '26923e0532d70a61f502603e3c80198f567f321378c953edebfc7a7b5522ee15'
'hus_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19591231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/hus/hus_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19591231.nc' 'SHA256' 'd5c93ccf07575c4d588154b6084a972cdde46feb417bdeb06267a824a64403e6'
'hus_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/hus/hus_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'SHA256' 'e4160c616046fa5914ee985fe4d484abbdac5c5566433a1a05a96ee2c0ba4de3'
'hus_day_IPSL-CM5A-MR_historical_r1i1p1_19800101-19891231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/hus/hus_day_IPSL-CM5A-MR_historical_r1i1p1_19800101-19891231.nc' 'SHA256' '5717538d89d90c8c34ca905a422a49d68b0f1b4e6630e4cf271ec94612ed8917'
'hus_day_IPSL-CM5A-MR_historical_r1i1p1_19700101-19791231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/hus/hus_day_IPSL-CM5A-MR_historical_r1i1p1_19700101-19791231.nc' 'SHA256' 'fda8411dd5acb1b30bbb0c1cf808eb2def55fd467496dcf0d5424f7d36685c0b'
'hus_day_IPSL-CM5A-MR_historical_r1i1p1_19600101-19691231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/hus/hus_day_IPSL-CM5A-MR_historical_r1i1p1_19600101-19691231.nc' 'SHA256' '469859630691c825230e9cea435d5c5764b747391a25e460b9f93eae1d1b125b'
'hur_day_IPSL-CM5A-MR_historical_r1i1p1_19700101-19791231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/hur/hur_day_IPSL-CM5A-MR_historical_r1i1p1_19700101-19791231.nc' 'SHA256' 'b0b0243a11d93430b289860bba6116de99a27a7c143f10188f74e45dc5acb767'
'rlds_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19991231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/rlds/rlds_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19991231.nc' 'SHA256' 'dde958270b9099ffc5b7a74b3c2cf7bafe77d0a5a6fb478527fe8b56726cbb4f'
'rlds_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/rlds/rlds_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'SHA256' '959b56b51d260aab01f3beed7d144fa92c6d34cc3b74d8ed60b84e6dcdd813b2'
'rlus_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19991231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/rlus/rlus_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19991231.nc' 'SHA256' '243bea038609d5add20917a16dadf6ed38a1a18ab4df1a4994623e676df225d0'
'rlus_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/rlus/rlus_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'SHA256' 'bbeb09ca0b84c8c9645c33d3873fca05d7b2f1aa9ad739dbdef7f68674eefd42'
'rhsmin_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19991231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/rhsmin/rhsmin_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19991231.nc' 'SHA256' 'd202c5aefebc45f89e94ac733e1ae3b0262b4c80de19dbb870db1654936cbe7b'
'rhsmax_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19991231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/rhsmax/rhsmax_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19991231.nc' 'SHA256' '42b6b33499e45486fc2f50e3568a4860b2af7326d9d003ec4078b0e4cfe28315'
'rhsmax_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/rhsmax/rhsmax_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'SHA256' '48a2aa979854f946880a3f3e90171d3cd42ef3b81a6e913087d05d5d24d5cbad'
'rhsmin_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/rhsmin/rhsmin_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'SHA256' 'c9c7cea8961792ce402e1716b8ce414b8b3c81916b0ff8474c79eef29f77bc36'
'rlut_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/rlut/rlut_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'SHA256' '82535fdd5402970b5f46932a21ca78ce8d63ffccba93aa5c59dafc16bb796384'
'tasmin_day_IPSL-CM5A-MR_historical_r1i1p1_19000101-19491231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/tasmin/tasmin_day_IPSL-CM5A-MR_historical_r1i1p1_19000101-19491231.nc' 'SHA256' '1ec98fb6135180e29d8b9e5f7eb2c5b5fc4304628b6261f823461486d57f9978'
'tasmin_day_IPSL-CM5A-MR_historical_r1i1p1_18500101-18991231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/tasmin/tasmin_day_IPSL-CM5A-MR_historical_r1i1p1_18500101-18991231.nc' 'SHA256' 'e47d82e8679bf800af3acefdbd71d946b9cc96f85e9066fcc6656e30abd5a017'
'uas_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/uas/uas_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'SHA256' '66622d3558767d2b51f03b401a79bbab3aff666598beb74115bd73221dffd7d9'
'ua_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19591231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/ua/ua_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19591231.nc' 'SHA256' 'f5a9a931a0353d0fc6f7033fb787557aef78766c1e248c7cbf5fc1ef1755be30'
'ua_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/ua/ua_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'SHA256' 'bb282400aebdbdfe96eb8bbab8c694bdb52a17974ebd25b80d3f45d628c8b225'
'ua_day_IPSL-CM5A-MR_historical_r1i1p1_19900101-19991231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/ua/ua_day_IPSL-CM5A-MR_historical_r1i1p1_19900101-19991231.nc' 'SHA256' 'f31df96915fa5929747f456db2ed1f27f5fe9da8198bf6d146dbbe080b0ca956'
'ua_day_IPSL-CM5A-MR_historical_r1i1p1_19800101-19891231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/ua/ua_day_IPSL-CM5A-MR_historical_r1i1p1_19800101-19891231.nc' 'SHA256' 'eb444a282e73122adcd8c06942984b0af67ef72988102262ab79eeaba3d5b79a'
'ua_day_IPSL-CM5A-MR_historical_r1i1p1_19700101-19791231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/ua/ua_day_IPSL-CM5A-MR_historical_r1i1p1_19700101-19791231.nc' 'SHA256' 'ab29ca9fff65fcded5384e610b005b551ceedd17b18e8b86617f050cbbe4b75e'
'ua_day_IPSL-CM5A-MR_historical_r1i1p1_19600101-19691231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/ua/ua_day_IPSL-CM5A-MR_historical_r1i1p1_19600101-19691231.nc' 'SHA256' '32da360c5838e1ce2be4df383c30e6bccf200b6e0d7d9387c8c2430aa3baa30d'
'prc_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19991231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/prc/prc_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19991231.nc' 'SHA256' 'cc39352b715cd1f5a7c1dbe8d78216ff15a985bb4daa4ceb031828b60c5996d0'
'prsn_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19991231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/prsn/prsn_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19991231.nc' 'SHA256' 'e26ae1fed5ca6fcb9cea56608d0cb53f3ce91a2b4bcd98923c5c2d18f2102109'
'prsn_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/prsn/prsn_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'SHA256' '9debe06b32c5a1b16186680d641a92832fc3069ca2a23c4e865e92c3bcd60fc1'
'rhs_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19991231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/rhs/rhs_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19991231.nc' 'SHA256' '4218c66eb1f5851e4f752883e87da8cf92866c7a1a4c2001275f56211e8d5e5f'
'psl_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19991231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/psl/psl_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19991231.nc' 'SHA256' 'b48192918e6fe09556457f064fa7c7fb0ef2227a2500b0c1b0556fa0f18303fc'
'rhs_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/rhs/rhs_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'SHA256' '8b606ca68ae2f3f9284caa0ff1d5dcbb1d23a890406c250e350bdd9fbe267f60'
'psl_day_IPSL-CM5A-MR_historical_r1i1p1_18500101-18991231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/psl/psl_day_IPSL-CM5A-MR_historical_r1i1p1_18500101-18991231.nc' 'SHA256' '800364de6966624070204c32b0a5331bf823a6efa5f904bb3eb03428cbe9c2a9'
'psl_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/psl/psl_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'SHA256' '970bee171f936de7bd88d245f39de967653f80105c0f51137294d5e2e3047de5'
'psl_day_IPSL-CM5A-MR_historical_r1i1p1_19000101-19491231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/psl/psl_day_IPSL-CM5A-MR_historical_r1i1p1_19000101-19491231.nc' 'SHA256' '36888e066027fe72a85b3c074fb717fd8397ae8097f6a19014d52efc20e96191'
'tasmax_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19991231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/tasmax/tasmax_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19991231.nc' 'SHA256' 'a413e56492ccb4554a793deb2c50e97e79c42bd77971af087c339eaa08d48fe1'
'tasmax_day_IPSL-CM5A-MR_historical_r1i1p1_19000101-19491231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/tasmax/tasmax_day_IPSL-CM5A-MR_historical_r1i1p1_19000101-19491231.nc' 'SHA256' '7fbed9bbf00be6f05c4d4da356431ef7eb62e3503cc066bf278f539c466f2cbf'
'tasmax_day_IPSL-CM5A-MR_historical_r1i1p1_18500101-18991231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/tasmax/tasmax_day_IPSL-CM5A-MR_historical_r1i1p1_18500101-18991231.nc' 'SHA256' '46038a29d05a5126d48f92faf4bd645db256ebb17cd04bddf8e24b03861b9dae'
'tasmin_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19991231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/tasmin/tasmin_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19991231.nc' 'SHA256' '15730797a62bd75e52c8ca5f3cfd037a0c0309792ae3d84ef24353a340d6ae03'
'tasmax_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/tasmax/tasmax_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'SHA256' '16f33fc16ff38d1c8b89cc785f009f9b688391d0a2ee77ccadf869ba7e08204b'
'tasmin_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/tasmin/tasmin_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'SHA256' '2431125103848c0d3b379076bae15358154282f7473a444717c6c2ccac5180c5'
'tas_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19991231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/tas/tas_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19991231.nc' 'SHA256' '09c113adc9f24b415cd74cb952db1cd310e65a61a9a81bba71f322612889748c'
'tas_day_IPSL-CM5A-MR_historical_r1i1p1_19000101-19491231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/tas/tas_day_IPSL-CM5A-MR_historical_r1i1p1_19000101-19491231.nc' 'SHA256' '562c58d2fb29b4affc7564af299e334bc098f5a4efee93905ca2313c0d91424a'
'tas_day_IPSL-CM5A-MR_historical_r1i1p1_18500101-18991231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/tas/tas_day_IPSL-CM5A-MR_historical_r1i1p1_18500101-18991231.nc' 'SHA256' '92f9464326589f51dfe904c5f9e70d30963041bbc9b0f617e9ff1f87662e1c91'
'zg_day_IPSL-CM5A-MR_historical_r1i1p1_19600101-19691231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/zg/zg_day_IPSL-CM5A-MR_historical_r1i1p1_19600101-19691231.nc' 'SHA256' '1189d9f21adde4189c1b2695e4e320c0648eb89183f58909b307ca58d73d270a'
'zg_day_IPSL-CM5A-MR_historical_r1i1p1_19700101-19791231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/zg/zg_day_IPSL-CM5A-MR_historical_r1i1p1_19700101-19791231.nc' 'SHA256' '3a74faa5c9a06a3eb67e92e302f8dba351d7fc61762dfc08b96f19f6026a8a3b'
'zg_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19591231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/zg/zg_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19591231.nc' 'SHA256' 'dd65c11f88613ba0a9ff559176aefdce2cfc5caecde0ecb8d231f72ad0415037'
'prc_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/prc/prc_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'SHA256' 'ec0d89781632305d486f08aa9468022d088d8ef91f0c49de77a8696f5e55bb47'
'huss_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/huss/huss_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'SHA256' '9f01e5f417bf64655469723f84bf2cb2176d41bfc86482443144dc2c5b0eddee'
'huss_day_IPSL-CM5A-MR_historical_r1i1p1_18500101-18991231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/huss/huss_day_IPSL-CM5A-MR_historical_r1i1p1_18500101-18991231.nc' 'SHA256' '7ba78e310d0935417cc65e291c06b4abe41b40ad338250957fa61e3ff987c56b'
'huss_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19991231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/huss/huss_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19991231.nc' 'SHA256' 'ced3293ff9075c4a5eed47ea2f64ef9dba99d7b2acac92452f5bb0b18661d93e'
'huss_day_IPSL-CM5A-MR_historical_r1i1p1_19000101-19491231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/huss/huss_day_IPSL-CM5A-MR_historical_r1i1p1_19000101-19491231.nc' 'SHA256' '3d610abd9198a44b97ae6f3b38e46fd4f5fcaded893415d8c38e684ef7fb5d8c'
'pr_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/pr/pr_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'SHA256' '7633135ca3bcc40a9307e919e42bf8edf7e41b2e1a83193678dc1c29fe263afb'
'pr_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19991231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/pr/pr_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19991231.nc' 'SHA256' '677e7174f48210d72a161e541300197a3356f1bdd21e4db037e4b1a08e40e162'
'pr_day_IPSL-CM5A-MR_historical_r1i1p1_19000101-19491231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/pr/pr_day_IPSL-CM5A-MR_historical_r1i1p1_19000101-19491231.nc' 'SHA256' '2fe1135690fc372209e1d91146dd4ef93d0cf50ff1bce0cecfebf03df17aef38'
'pr_day_IPSL-CM5A-MR_historical_r1i1p1_18500101-18991231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/pr/pr_day_IPSL-CM5A-MR_historical_r1i1p1_18500101-18991231.nc' 'SHA256' 'bc9950e250a8f149b295631d224ef8633359b738b506c0dd25f2f2d331bf2271'
'rsds_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19991231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/rsds/rsds_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19991231.nc' 'SHA256' 'f82a1ac1d04789dd74c038f8162c0ef4b3c237f5e0c6c1c8bf18070c6556dba6'
'rsds_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/rsds/rsds_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'SHA256' '36673c3df4727deed5ee32661d6c4a206f27c33d5e0c7a93b13ec021cdede316'
'rsus_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/rsus/rsus_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'SHA256' '1a9454aec8b7edcf52e7422a14867584a5cd802390d09743a5498f29eacd1700'
'rsus_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19991231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/rsus/rsus_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19991231.nc' 'SHA256' 'b2572d9bbcfafc7638ef7bd416ccdaa792d96b974423eeb212081053b6f2dcc6'
'sfcWind_day_IPSL-CM5A-MR_historical_r1i1p1_18500101-18991231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/sfcWind/sfcWind_day_IPSL-CM5A-MR_historical_r1i1p1_18500101-18991231.nc' 'SHA256' '170c8ae3750b0341b51612099d04f0b8b628eb33b003a2b686892f9bb98d908d'
'sfcWind_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19991231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/sfcWind/sfcWind_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19991231.nc' 'SHA256' '425f3450ddecac197a175541c854b89d1028081ce57574ee1634f4e50353b040'
'sfcWind_day_IPSL-CM5A-MR_historical_r1i1p1_19000101-19491231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/sfcWind/sfcWind_day_IPSL-CM5A-MR_historical_r1i1p1_19000101-19491231.nc' 'SHA256' 'e45a3e9aac0d458f9c9f8201581c6930d77377dcf1546a48e4401f683f2e9666'
'sfcWind_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/sfcWind/sfcWind_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'SHA256' 'ef78700c25a0a115dc4115eca53caefc4a280bfc8a588d2f0f5341bf09705282'
'rlut_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19991231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/rlut/rlut_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19991231.nc' 'SHA256' '763f59548eb4f0d50fbe596749e53fbff39dcf9d9b0505dfb304bb98f8d5caad'
'wap_day_IPSL-CM5A-MR_historical_r1i1p1_19800101-19891231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/wap/wap_day_IPSL-CM5A-MR_historical_r1i1p1_19800101-19891231.nc' 'SHA256' '2447482d4865885b40889576b32ca1ffca7d9ed7a03cbd9f2456d0c4b59e7f86'
'wap_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/wap/wap_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'SHA256' 'd4f2013d6624f69528771460db8cc5ef4cfc1359c361546584d053b16b40eeb0'
'wap_day_IPSL-CM5A-MR_historical_r1i1p1_19900101-19991231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/wap/wap_day_IPSL-CM5A-MR_historical_r1i1p1_19900101-19991231.nc' 'SHA256' 'a92cacf54cac876d4b9c240ded6a97308f4a1463a5af8d91feb28dbffd57c186'
'wap_day_IPSL-CM5A-MR_historical_r1i1p1_19700101-19791231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/wap/wap_day_IPSL-CM5A-MR_historical_r1i1p1_19700101-19791231.nc' 'SHA256' '59192d97811ce2e1df983efb64fdd3b55a5465e1c21c5383d3d91085329c7425'
'wap_day_IPSL-CM5A-MR_historical_r1i1p1_19600101-19691231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/wap/wap_day_IPSL-CM5A-MR_historical_r1i1p1_19600101-19691231.nc' 'SHA256' '12c9d05e2db2601884bb01fb2fe28eaa6fce7eedd36a42addea0234dc27aa1d3'
'wap_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19591231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/wap/wap_day_IPSL-CM5A-MR_historical_r1i1p1_19500101-19591231.nc' 'SHA256' '5b7f4df36f76645d339fe537357206b9797ed52c20178f8048f7da551ba34c0b'
'zg_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/zg/zg_day_IPSL-CM5A-MR_historical_r1i1p1_20000101-20051231.nc' 'SHA256' '5e9cc51945130a3e8e0fd940da034dbfd569dac91c612695ddd3b68839ded385'
'zg_day_IPSL-CM5A-MR_historical_r1i1p1_19900101-19991231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/zg/zg_day_IPSL-CM5A-MR_historical_r1i1p1_19900101-19991231.nc' 'SHA256' 'b979c4b6c107628c81f63ede536b04584d684dbe1d09697080d3cbd5db3448a3'
'zg_day_IPSL-CM5A-MR_historical_r1i1p1_19800101-19891231.nc' 'http://esgf.extra.cea.fr/thredds/fileServer/work_cmip5/output1/IPSL/IPSL-CM5A-MR/historical/day/atmos/day/r1i1p1/v20130506/zg/zg_day_IPSL-CM5A-MR_historical_r1i1p1_19800101-19891231.nc' 'SHA256' '622339e0780f73ba9c705376d832f78bee86d02ea5ef515daa567255a55297b2'
EOF--dataset.file.url.chksum_type.chksum
)"

# ESG_HOME should point to the directory containing ESG credentials.
#   Default is $HOME/.esg
ESG_HOME=${ESG_HOME:-$HOME/.esg}
[[ -d $ESG_HOME ]] || mkdir -p $ESG_HOME

ESG_CREDENTIALS=${X509_USER_PROXY:-$ESG_HOME/credentials.pem}
ESG_CERT_DIR=${X509_CERT_DIR:-$ESG_HOME/certificates}
MYPROXY_STATUS=$HOME/.MyProxyLogon
COOKIE_JAR=$ESG_HOME/cookies
MYPROXY_GETCERT=$ESG_HOME/getcert.jar
CERT_EXPIRATION_WARNING=$((60 * 60 * 8))   #Eight hour (in seconds)

WGET_TRUSTED_CERTIFICATES=$ESG_HOME/certificates


# Configure checking of server SSL certificates.
#   Disabling server certificate checking can resolve problems with myproxy
#   servers being out of sync with datanodes.
CHECK_SERVER_CERT=${CHECK_SERVER_CERT:-Yes}

check_os() {
    local os_name=$(uname | awk '{print $1}')
    case ${os_name} in
        Linux)
            ((debug)) && echo "Linux operating system detected"
            LINUX=1
            MACOSX=0
            ;;
        Darwin)
            ((debug)) && echo "Mac OS X operating system detected"
            LINUX=0
            MACOSX=1
            ;;
        *)
            echo "Unrecognized OS [${os_name}]"
            return 1
            ;;
    esac
    return 0
}

#taken from http://stackoverflow.com/a/4025065/1182464
vercomp () {
    if [[ $1 == $2 ]]
    then
        return 0
    fi
    local IFS=.
    local i ver1=($1) ver2=($2)
    # fill empty fields in ver1 with zeros
    for ((i=${#ver1[@]}; i<${#ver2[@]}; i++))
    do
        ver1[i]=0
    done
    for ((i=0; i<${#ver1[@]}; i++))
    do
        if [[ -z ${ver2[i]} ]]
        then
            # fill empty fields in ver2 with zeros
            ver2[i]=0
        fi
        if ((10#${ver1[i]} > 10#${ver2[i]}))
        then
            return 1
        fi
        if ((10#${ver1[i]} < 10#${ver2[i]}))
        then
            return 2
        fi
    done
    return 0
}

check_commands() {
    #check wget
    local MIN_WGET_VERSION=1.10
    vercomp $(wget -V | sed -n 's/^.* \([1-9]\.[0-9.]*\) .*$/\1/p') $MIN_WGET_VERSION
    case $? in
        2) #lower
            wget -V
            echo
            echo "** ERROR: wget version is too old. Use version $MIN_WGET_VERSION or greater. **" >&2
            exit 1
    esac
}

usage() {
    echo "Usage: $(basename $0) [flags] [openid] [username]"
    echo "Flags is one of:"
    sed -n '/^while getopts/,/^done/  s/^\([^)]*\)[^#]*#\(.*$\)/\1 \2/p' $0
    echo
    echo "This command stores the states of the downloads in .$0.status"
    echo "For more information check the website: http://esgf.org/wiki/ESGF_wget"
}

#defaults
debug=0
clean_work=1

#parse flags
while getopts ':c:pfF:o:w:isuUndvqhHI:T' OPT; do
    case $OPT in
        H) skip_security=1 && use_http_sec=1;; #       : Authenticate with OpenID (username,) and password, without the need for a certificate.
        T) force_TLSv1=1;;              #       : Forces wget to use TLSv1. 
        c) ESG_CREDENTIALS="$OPTARG";;  #<cert> : use this certificate for authentication.
        f) force=1;;                    #       : force certificate retrieval (defaults to only once per day); for certificate-less authentication (see -H option), this flag will force login and refresh cookies.
        F) input_file="$OPTARG";;       #<file> : read input from file instead of the embedded one (use - to read from stdin)
        o) openId="$OPTARG";;           #<openid>: Provide OpenID instead of interactively asking for it.
        I) username_supplied="$OPTARG";;    #<user_id> : Explicitly set user ID.  By default, the user ID is extracted from the last component of the OpenID URL.  Use this flag to override this behaviour.                   
        w) output="$OPTARG";;           #<file> : Write embedded files into a file and exit
        i) insecure=1;;                 #       : set insecure mode, i.e. don't check server certificate
        s) skip_security=1 && use_cookies_for_http_basic_auth_start=1;;            #       : completely skip security. It will only work if the accessed data is not secured at all. -- works only if the accessed data is unsecured or a certificate exists or cookies are saved (latter applies to -H option only).
        u) update=1;;                   #       : Issue the search again and see if something has changed.
        U) update_files=1;;             #       : Update files from server overwriting local ones (detect with -u)
        n) dry_run=1;;                  #       : Don't download any files, just report.
        p) clean_work=0;;               #       : preserve data that failed checksum
        d) verbose=1;debug=1;;          #       : display debug information
        v) verbose=1;;                  #       : be more verbose
        q) quiet=1;;                    #       : be less verbose
        h) usage && exit 0;;            #       : displays this help
        \?) echo "Unknown option '$OPTARG'" >&2 && usage && exit 1;;
        \:) echo "Missing parameter for flag '$OPTARG'" >&2 && usage && exit 1;;
    esac
done
shift $(($OPTIND - 1))

#setup input as desired by the user
if [[ "$input_file" ]]; then
    if [[ "$input_file" == '-' ]]; then
        download_files="$(cat)" #read from STDIN
        exec 0</dev/tty #reopen STDIN as cat closed it
    else
        download_files="$(cat $input_file)" #read from file
    fi
fi

#if -w (output) was selected write file and finish:
if [[ "$output" ]]; then
    #check the file
    if [[ -f "$output" ]]; then
        read -p "Overwrite existing file $output? (y/N) " answ
        case $answ in y|Y|yes|Yes);; *) echo "Aborting then..."; exit 0;; esac
    fi
    echo "$download_files">$output
    exit
fi


#assure we have everything we need
check_commands

if ((update)); then
    echo "Checking the server for changes..."
    new_wget="$(wget "$search_url" -qO -)"
    compare_cmd="grep -vE '^(# Generated by|# Search URL|search_url=)'"
    if diff -q <(eval $compare_cmd<<<"$new_wget") <(eval $compare_cmd $0) >/dev/null; then
        echo "No changes detected."
    else
        echo "Wget was changed. Dowloading. (old renamed to $0.old.#N)"
        counter=0
        while [[ -f $0.old.$counter ]]; do ((counter++)); done
        mv $0 $0.old.$counter
        echo "$new_wget" > $0
    fi
    exit 0      
fi


##############################################################################
check_java() {
    if ! type java >& /dev/null; then
        echo "Java is required for retrieving the certificate and couldn't be found."
        exit 1
    fi
    jversion=($(jversion=$(java -version 2>&1 | awk '/version/ {gsub("\"","");print $3}'); echo ${jversion//./ }))
    mVer=${jversion[1]}
    if ((mVer<5)); then
        echo "Java version 1.5+ is required for retrieving the certificate." >&2
        echo "Current version seems older: $(java -version | head -n1) " >&2  
        exit 1
    fi
}

proxy_to_java() {
    local proxy_user proxy_pass proxy_server proxy_port
    eval $(sed 's#^\(https\?://\)\?\(\([^:@]*\)\(:\([^@]*\)\)\?@\)\?\([^:/]*\)\(:\([0-9]*\)\)\?.*#proxy_user=\3;proxy_pass=\5;proxy_server=\6;proxy_port=\8#'<<<$http_proxy)
    local JAVA_PROXY=
    [[ "$proxy_server" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttp.proxyHost=$proxy_server"
    [[ "$proxy_port" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttp.proxyPort=$proxy_port"
    eval $(sed 's#^\(https\?://\)\?\(\([^:@]*\)\(:\([^@]*\)\)\?@\)\?\([^:/]*\)\(:\([0-9]*\)\)\?.*#proxy_user=\3;proxy_pass=\5;proxy_server=\6;proxy_port=\8#'<<<$https_proxy)
    [[ "$proxy_server" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttps.proxyHost=$proxy_server"
    [[ "$proxy_port" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttps.proxyPort=$proxy_port"
    
    echo "$JAVA_PROXY"
}

# get certificates from github
get_certificates() {
    # don't if this was already done today
    [[ -z $force && "$(find $ESG_CERT_DIR -type d -mtime -1 2>/dev/null)" ]] && return 0
    echo -n "Retrieving Federation Certificates..." >&2
    
    if ! wget --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/esg_trusted_certificates.tar -O - -q | tar x -C $ESG_HOME; then
        #certificates tarred into esg_trusted_certificates. (if it breaks, let the user know why
        wget --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/esg_trusted_certificates.tar
        echo "Could't update certs!" >&2
        return 1
    else
        #if here everythng went fine. Replace old cert with this ones    
        [[ -d $ESG_CERT_DIR ]] && rm -r $ESG_CERT_DIR || mkdir -p $(dirname $ESG_CERT_DIR)
        mv $ESG_HOME/esg_trusted_certificates $ESG_CERT_DIR
        touch $ESG_CERT_DIR
        echo "done!" >&2
    fi

}

# Retrieve ESG credentials
unset pass
get_credentials() {
    check_java
    #get all certificates
    get_certificates

    if [[ -z "$(find $MYPROXY_GETCERT -type f -mtime -1 2>/dev/null)" ]]; then
        echo -n "(Downloading $MYPROXY_GETCERT... "
        mkdir -p $(dirname $MYPROXY_GETCERT)
        if wget -q --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/getcert.jar -O $MYPROXY_GETCERT;then
            echo 'done)'
            touch $MYPROXY_GETCERT
        else
            echo 'failed)'
        fi
    fi

    #if the user already defined one, use it
    if [[ -z $openId ]]; then
        #try to parse the last valid value if any
        [[ -f "$MYPROXY_STATUS" ]] && openId=$(awk -F= '/^OpenID/ {gsub("\\\\", ""); print $2}' $MYPROXY_STATUS)
        if [[ -z $openId ]]; then
            #no OpenID, we need to ask the user
            echo -n "Please give your OpenID (Example: https://myserver/example/username) ? "
        else
            #Allow the user to change it if desired
            echo -n "Please give your OpenID (hit ENTER to accept default: $openId)? "
        fi
        read -e
        [[ "$REPLY" ]] && openId="$REPLY"
    else
        ((verbose)) && echo "Using user defined OpenID $openId (to change use -o <open_id>)"
    fi

    if grep -q ceda.ac.uk <<<$openId; then
        username=${openId##*/}
        echo -n "Please give your username if different [$username]: "
        read -e
        [[ "$REPLY" ]] && username="$REPLY"
    fi
    
    #get password
    [[ ! "$pass" ]] && read -sp "MyProxy Password? " pass


    local args=
    [[ "$openId" ]] && args=$args" --oid $openId"
    [[ "$pass" ]] && args=$args" -P $pass"
    [[ "$username" ]] && args=$args" -l $username"
    
    echo -n $'\nRetrieving Credentials...' >&2
    if ! java $(proxy_to_java) -jar $MYPROXY_GETCERT $args --ca-directory $ESG_CERT_DIR --output $ESG_CREDENTIALS ; then        
        echo "Certificate could not be retrieved"
        exit 1
    fi
    echo "done!" >&2
}

# check the certificate validity
check_cert() {
    if [[ ! -f "$ESG_CERT" || $force ]]; then
        #not there, just get it
        get_credentials
    elif which openssl &>/dev/null; then
        #check openssl and certificate
        if ! openssl x509 -checkend $CERT_EXPIRATION_WARNING -noout -in $ESG_CERT 2>/dev/null; then
            echo "The certificate expires in less than $((CERT_EXPIRATION_WARNING / 60 / 60)) hour(s). Renewing..."
            get_credentials
        else
            #ok, certificate is fine
            return 0
        fi
    fi
}

#
# Detect ESG credentials
#
find_credentials() {

    #is X509_USER_PROXY or $HOME/.esg/credential.pem
    if [[ -f "$ESG_CREDENTIALS" ]]; then
        # file found, proceed.
        ESG_CERT="$ESG_CREDENTIALS"
        ESG_KEY="$ESG_CREDENTIALS"
    elif [[ -f "$X509_USER_CERT" && -f "$X509_USER_KEY" ]]; then
        # second try, use these certificates.
        ESG_CERT="$X509_USER_CERT"
        ESG_KEY="$X509_USER_KEY"
    else
        # If credentials are not present, just point to where they should go 
        echo "No ESG Credentials found in $ESG_CREDENTIALS" >&2
            ESG_CERT="$ESG_CREDENTIALS"
            ESG_KEY="$ESG_CREDENTIALS"
            #they will be retrieved later one
    fi


    #chek openssl and certificate
    if (which openssl &>/dev/null); then
        if ( openssl version | grep 'OpenSSL 1\.0' ); then
            echo '** WARNING: ESGF Host certificate checking might not be compatible with OpenSSL 1.0+'
        fi
        check_cert || { (($?==1)); exit 1; }
    fi
    
    if [[ $CHECK_SERVER_CERT == "Yes" ]]; then
        [[ -d "$ESG_CERT_DIR" ]] || { echo "CA certs not found. Aborting."; exit 1; }
        PKI_WGET_OPTS="--ca-directory=$ESG_CERT_DIR"
    fi

    #some wget version complain if there's no file present
    [[ -f $COOKIE_JAR ]] || touch $COOKIE_JAR

    PKI_WGET_OPTS="$PKI_WGET_OPTS --certificate=$ESG_CERT --private-key=$ESG_KEY --save-cookies=$COOKIE_JAR --load-cookies=$COOKIE_JAR --ca-certificate=$ESG_CERT"

}

check_chksum() {
    local file="$1"
    local chk_type=$2
    local chk_value=$3
    local local_chksum=Unknown

    case $chk_type in
        md5) local_chksum=$(md5sum_ $file | cut -f1 -d" ");;
        sha256) local_chksum=$(sha256sum_ $file|awk '{print $1}'|cut -d ' ' -f1);;
        *) echo "Can't verify checksum." && return 0;;
    esac

    #verify
    ((debug)) && echo "local:$local_chksum vs remote:$chk_value" >&2
    echo $local_chksum
}

#Our own md5sum function call that takes into account machines that don't have md5sum but do have md5 (i.e. mac os x)
md5sum_() {
    hash -r
    if type md5sum >& /dev/null; then
        echo $(md5sum $@)
    else
        echo $(md5 $@ | sed -n 's/MD5[ ]*\(.*\)[^=]*=[ ]*\(.*$\)/\2 \1/p')
    fi
}

#Our own sha256sum function call that takes into account machines that don't have sha256sum but do have sha2 (i.e. mac os x)
sha256sum_() {
    hash -r
    if type sha256sum >& /dev/null; then
        echo $(sha256sum $@)
    elif type shasum >& /dev/null; then
        echo $(shasum -a 256 $@)
    else
        echo $(sha2 -q -256 $@)
    fi
}

get_mod_time_() {
    if ((MACOSX)); then
        #on a mac modtime is stat -f %m <file>
        echo "$(stat -f %m $@)"
    else
        #on linux (cygwin) modtime is stat -c %Y <file>
        echo "$(stat -c %Y $@)"
    fi
    return 0;
}

remove_from_cache() {
    local entry="$1"
    local tmp_file="$(grep -ve "^$entry" "$CACHE_FILE")"
    echo "$tmp_file" > "$CACHE_FILE"
    unset cached
}

#Download data from node using cookies and not certificates.
download_http_sec()
{
  #The data to be downloaded.
  data=" $url"
  filename="$file"  

  #Wget args.
  if ((insecure)) 
  then
   wget_args=" --no-check-certificate --cookies=on  --keep-session-cookies --save-cookies $COOKIES_FOLDER/wcookies.txt " 
  else
   wget_args=" --ca-directory=$WGET_TRUSTED_CERTIFICATES --cookies=on --keep-session-cookies --save-cookies $COOKIES_FOLDER/wcookies.txt "  
  fi 

  if ((use_cookies_for_http_basic_auth_start)) || ((use_cookies_for_http_basic_auth)) 
  then
   wget_args=" $wget_args"" --load-cookies $COOKIES_FOLDER/wcookies.txt"    
  fi
  
  if((force_TLSv1))
  then
   wget_args=" $wget_args"" --secure-protocol=TLSv1 "
  fi
  
  
  if [[ ! -z "$ESGF_WGET_OPTS" ]]
  then
    wget_args="$wget_args $ESGF_WGET_OPTS"
  fi  
  

  #use cookies for the next downloads
  use_cookies_for_http_basic_auth=1;
   
  #Debug message.
  if  ((debug))
  then
   echo -e "\nExecuting:\n"
   echo -e "wget $wget_args $data\n"
  fi


  #Try to download the data. 
  command="wget $wget_args -O $filename $data"
  http_resp=$(eval $command  2>&1) 
  cmd_exit_status="$?"
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi
      
  #Extract orp service from url ?
  #Evaluate response.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( "$redirects" == 1 )) && 
  if  echo "$http_resp" | grep -q "/esg-orp/"      
  then
   urls=$(echo "$http_resp" | egrep -o 'https://[^ ]+' | cut -d'/' -f 3)
   orp_service=$(echo "$urls" | tr '\n' ' ' | cut -d' ' -f 2)


   #Use cookies for transaction with orp.
   wget_args=" $wget_args"" --load-cookies $COOKIES_FOLDER/wcookies.txt"    
   
   #Download data using either http basic auth or http login form.
   if [[ "$openid_c" == */openid/  || "$openid_c" == */openid ]]
   then
    download_http_sec_open_id
   else
    download_http_sec_decide_service
   fi
  else  
   if    echo "$http_resp" | grep -q "401 Unauthorized"  \
      || echo "$http_resp" | grep -q "403: Forbidden"  \
      || echo "$http_resp" | grep -q "Connection timed out."  \
      || echo "$http_resp" | grep -q "no-check-certificate"  \
      || (( $cmd_exit_status != 0 ))      
   then 
    echo "ERROR : http request to OpenID Relying Party service failed."
    failed=1
   fi
  fi
}


#Function that decides which implementaion of idp to use.
download_http_sec_decide_service()
{
  #find claimed id

  pos=$(echo "$openid_c" | egrep -o '/' | wc -l)
  username_c=$(echo "$openid_c"  | cut -d'/' -f "$(($pos + 1))")
  esgf_uri=$(echo "$openid_c" | egrep -o '/esgf-idp/openid/')

  host=$(echo "$openid_c"  | cut -d'/' -f 3)
  #test ceda first.

  if [[ -z "$esgf_uri" ]]
  then
   openid_c_tmp="https://""$host""/openid/"
  else
   openid_c_tmp="https://""$host""/esgf-idp/openid/" 
  fi

  command="wget "$openid_c_tmp" --no-check-certificate ${force_TLSv1:+--secure-protocol=TLSv1} -O-"
        
  if [[ ! -z "$ESGF_WGET_OPTS" ]]
  then
   command="$command $ESGF_WGET_OPTS"
  fi  
          
  #Debug message.
  if  ((debug))
  then
   echo -e "\nExecuting:\n"
   echo -e "$command\n"
  fi
            

  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"
  
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 
  

  if    echo "$http_resp" | grep -q "[application/xrds+xml]"  \
     && echo "$http_resp" | grep -q "200 OK"  \
     && (( cmd_exit_status == 0 ))       
  then
   openid_c=$openid_c_tmp
   download_http_sec_open_id
  else
   if [[ -z "$esgf_uri" ]]
   then
    echo "ERROR : HTTP request to OpenID Relying Party service failed."
    failed=1
   else
   download_http_sec_cl_id
   fi
  fi
}


download_http_sec_retry()
{
  echo -e "\nRetrying....\n"
  #Retry in case that last redirect did not work, this happens with older version of wget.
  command="wget $wget_args $data"
      
  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "$command\n"
  fi   
   
  http_resp=$(eval $command  2>&1) 
  cmd_exit_status="$?"

  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi
   
  if    echo "$http_resp" | grep -q "401 Unauthorized"  \
     || echo "$http_resp" | grep -q "403: Forbidden"  \
     || echo "$http_resp" | grep -q "Connection timed out."  \
     || echo "$http_resp" | grep -q "no-check-certificate"  \
     || (( $cmd_exit_status != 0 ))      
  then 
   echo -e "\nERROR : Retry failed.\n"
   #rm "$filename"
   failed=1
  fi #if retry failed.
}

#Function for downloading data using the claimed id.
download_http_sec_cl_id()
{
  #Http request for sending openid to the orp service.
  command="wget --post-data \"openid_identifier=$openid_c&rememberOpenid=on\"  $wget_args -O- https://$orp_service/esg-orp/j_spring_openid_security_check.htm "

  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "wget $command\n"
  fi 
  
  
  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"

  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 
    
  
  #Extract orp service from openid ?
  #Evaluate response.If redirected to idp service send the credentials.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( redirects == 2  )) && 
  if  echo "$http_resp" | grep -q "login.htm"  && (( cmd_exit_status == 0 ))   
  then 
  
   urls=$(echo "$http_resp" | egrep -o 'https://[^ ]+' | cut -d'/' -f 3)
   idp_service=$(echo "$urls"  | tr '\n' ' ' | cut -d' ' -f 2) 
      
   command="wget --post-data  password=\"$password_c\" $wget_args ${quiet:+-q} ${quiet:--v} -O $filename https://$idp_service/esgf-idp/idp/login.htm"
   

   #Debug message.
   if  ((debug))
   then
    echo -e "Executing:\n"
    echo -e "wget $command\n"
   fi 

   #Execution of command.
   http_resp=$(eval $command  2>&1)
   cmd_exit_status="$?"
      
   if ((debug))
   then
    echo -e "\nHTTP response:\n $http_resp\n"
   fi 
        
   #Evaluate response. 
   #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
   #(( "$redirects" != 5 )) \ 
   if    echo "$http_resp" | grep -q "text/html"  \
      || echo "$http_resp" | grep -q "403: Forbidden"  \
      || (( cmd_exit_status != 0 ))        
   then 
    rm "$filename"
    download_http_sec_retry
   fi
 
  else
   echo "ERROR : HTTP request to OpenID Provider service failed."
   failed=1
  fi #if redirected to idp.  
}



download_http_sec_open_id()
{
  #Http request for sending openid to the orp web service.
  command="wget --post-data \"openid_identifier=$openid_c&rememberOpenid=on\" --header=\"esgf-idea-agent-type:basic_auth\" --http-user=\"$username_c\" --http-password=\"$password_c\"  $wget_args ${quiet:+-q} ${quiet:--v} -O $filename https://$orp_service/esg-orp/j_spring_openid_security_check.htm "


  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "$command\n"
  fi 

  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"
  
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 

  #Evaluate response.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( "$redirects" != 7 )) ||
  if   echo "$http_resp" | grep -q "text/html"  ||  (( $cmd_exit_status != 0 ))   
  then
   rm "$filename"
   download_http_sec_retry     
  fi #if error during http basic authentication. 
  
}


download() {
    wget="wget ${insecure:+--no-check-certificate} ${quiet:+-q} ${quiet:--v} -c ${force_TLSv1:+--secure-protocol=TLSv1} $PKI_WGET_OPTS"
    
    while read line
    do
        # read csv here document into proper variables
        eval $(awk -F "' '" '{$0=substr($0,2,length($0)-2); $3=tolower($3); print "file=\""$1"\";url=\""$2"\";chksum_type=\""$3"\";chksum=\""$4"\""}' <(echo $line) )

        #Process the file
        echo -n "$file ..."

        #get the cached entry if any.
        cached="$(grep -e "^$file" "$CACHE_FILE")"
        
        #if we have the cache entry but no file, clean it.
        if [[ ! -f $file && "$cached" ]]; then
            #the file was removed, clean the cache
            remove_from_cache "$file"
            unset cached
        fi
        
        #check it wasn't modified
        if [[ -n "$cached" && "$(get_mod_time_ $file)" == $(echo "$cached" | cut -d ' ' -f2) ]]; then
                    if [[ "$chksum" == "$(echo "$cached" | cut -d ' ' -f3)" ]]; then
                echo "Already downloaded and verified"
                continue
            elif ((update_files)); then
                #user want's to overwrite newer files
                rm $file
                remove_from_cache "$file"
                unset cached
            else
                #file on server is different from what we have. 
                echo "WARNING: The remote file was changed (probably a new version is available). Use -U to Update/overwrite"
                continue
            fi
        fi
        unset chksum_err_value chksum_err_count
        
        while : ; do
            # (if we had the file size, we could check before trying to complete)
            echo "Downloading"
            [[ ! -d "$(dirname "$file")" ]] && mkdir -p "$(dirname "$file")"
            if ((dry_run)); then
                #all important info was already displayed, if in dry_run mode just abort
                #No status will be stored
                break
            else
                if ((use_http_sec))
                then
                 download_http_sec
                 if ((failed))
                 then
                  break
                 fi
                else
                 $wget -O "$file" $url || { failed=1; break; }  
                fi                
            fi

            #check if file is there
            if [[ -f $file ]]; then
                ((debug)) && echo file found
                if [[ ! "$chksum" ]]; then
                    echo "Checksum not provided, can't verify file integrity"
                    break
                fi
                result_chksum=$(check_chksum "$file" $chksum_type $chksum)
                if [[ "$result_chksum" != "$chksum" ]]; then
                    echo "  $chksum_type failed!"
                    if ((clean_work)); then
                        if !((chksum_err_count)); then
                                chksum_err_value=$result_chksum
                                chksum_err_count=2
                            elif ((checksum_err_count--)); then
                                if [[ "$result_chksum" != "$chksum_err_value" ]]; then
                                    #this is a real transmission problem
                                    chksum_err_value=$result_chksum
                                    chksum_err_count=2
                                fi
                            else
                                #ok if here we keep getting the same "different" checksum
                                echo "The file returns always a different checksum!"
                                echo "Contact the data owner to verify what is happening."
                                echo
                                sleep 1
                                break
                            fi
                        
                            rm $file
                            #try again
                            echo -n "  re-trying..."
                            continue
                    else
                            echo "  don't use -p or remove manually."
                    fi
                else
                    echo "  $chksum_type ok. done!"
                    echo "$file" $(get_mod_time_ "$file") $chksum >> $CACHE_FILE
                fi
            fi
            #done!
            break
        done
        
        if ((failed)); then
            echo "download failed"
            # most common failure is certificate expiration, so check this
            #if we have the pasword we can retrigger download
            ((!skip_security)) && [[ "$pass" ]] && check_cert
            unset failed
        fi
        
done <<<"$download_files"

}

dedup_cache_() {
    local file=${1:-${CACHE_FILE}}
    ((debug)) && echo "dedup'ing cache ${file} ..."
    local tmp=$(LC_ALL='C' sort  -r -k1,2 $file | awk '!($1 in a) {a[$1];print $0}' | sort -k2,2)
    ((DEBUG)) && echo "$tmp"
    echo "$tmp" > $file
    ((debug)) && echo "(cache dedup'ed)"
}

http_basic_auth_func_info_message()
{
  echo  "********************************************************************************"
  echo  "*                                                                              *"
  echo  "* Note that new functionality to allow authentication without the need for     *"
  echo  "* certificates is available with this version of the wget script.  To enable,  *"
  echo  "* use the \"-H\" option and enter your OpenID and password when prompted:        *"
  echo  "*                                                                              *"
  echo  "* $ "$(basename "$0")" -H [options...]                                     *"
  echo  "*                                                                              *"
  echo  "* For a full description of the available options use the help option:         *"
  echo  "*                                                                              *"
  echo  "* $ "$(basename "$0")" -h                                                  *"
  echo  "*                                                                              *"
  echo  "********************************************************************************"
}

#
# MAIN
#

if ((!use_http_sec))
then 
 http_basic_auth_func_info_message
fi

echo "Running $(basename $0) version: $version"
((verbose)) && echo "we use other tools in here, don't try to user their proposed 'options' directly"
echo "Use $(basename $0) -h for help."$'\n'

((debug)) && cat<<EOF
** Debug info **
ESG_HOME=$ESG_HOME
ESG_CREDENTIALS=$ESG_CREDENTIALS
ESG_CERT_DIR=$ESG_CERT_DIR
** -- ** -- ** -- ** --

EOF


cat <<'EOF-MESSAGE'
Script created for 240 file(s)
(The count won't match if you manually edit this file!)



EOF-MESSAGE
sleep 1

check_os
((!skip_security)) && find_credentials

if ((use_http_sec))
then 
     
 if (( ! insecure))
 then 
  get_certificates
 fi

 #Cookies folder.
 COOKIES_FOLDER="$ESG_HOME/wget_cookies"
 
 if (( force ))
 then
  if [ -d $COOKIES_FOLDER ] 
  then
   rm -rf $COOKIES_FOLDER
  fi
 fi

 #Create cookies folder. 
 if [[ ! -d $COOKIES_FOLDER ]] 
 then
  mkdir $COOKIES_FOLDER
 fi
 
 if((! use_cookies_for_http_basic_auth_start))
 then

  #Read openid.
  if [[ ! -z "$openId" ]]
  then
   openid_c="$openId"
  elif ( (("$#" > 1)) || (("$#" == 1)) ) 
  then
   openid_c=$1
  else
   read -p    "Enter your openid : " openid_c
  fi
  
  
  #Read username.
  if [[ ! -z "$username_supplied" ]]
  then
   username_c="$username_supplied"
  elif (("$#" == 2))
  then
   username_c=$2
  elif [[ "$openid_c" == */openid/ || "$openid_c" == */openid ]]
  then
   read -p    "Enter username : " username_c
  fi
  
  #Read password.
  read -s -p "Enter password : " password_c
  echo -e "\n"

 fi #use cookies

fi #use_http_sec 


#do we have old results? Create the file if not
[ ! -f $CACHE_FILE ] && echo "#filename mtime checksum" > $CACHE_FILE && chmod 666 $CACHE_FILE

#clean the force parameter if here (at htis point we already have the certificate)
unset force

download

dedup_cache_


echo "done"
